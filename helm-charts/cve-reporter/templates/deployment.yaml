apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cve-reporter.fullname" . }}
  labels:
    {{- include "cve-reporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cve-reporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cve-reporter.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: webhook-receiver
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["python3", "/scripts/webhook_receiver.py"]
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        env:
        - name: HARBOR_URL
          value: {{ .Values.harbor.url | quote }}
        - name: HARBOR_USER
          value: {{ .Values.harbor.username | quote }}
        - name: HARBOR_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.harbor.secretName }}
              key: password
        - name: SMTP_HOST
          value: {{ .Values.email.smtp.host | quote }}
        - name: SMTP_PORT
          value: {{ .Values.email.smtp.port | quote }}
        - name: SMTP_USER
          value: {{ .Values.email.smtp.username | quote }}
        - name: SMTP_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.email.smtp.secretName }}
              key: password
        - name: EMAIL_FROM
          value: {{ .Values.email.from | quote }}
        - name: EMAIL_TO
          value: {{ join "," .Values.email.to | quote }}
        volumeMounts:
        - name: scripts
          mountPath: /scripts
      volumes:
      - name: scripts
        configMap:
          name: {{ include "cve-reporter.fullname" . }}-scripts
          defaultMode: 0755
